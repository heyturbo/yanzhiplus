<!DOCTYPE html>
<html>
<head>
  <title>紫薇通灵模拟器</title>
  <style>
    body {
      text-align: center;
      font-family: Arial, sans-serif;
      background-color: #000000;
    }
    
    button {
      margin: 10px;
      flex: 0.25;
      border: 1px solid #6F391C;
      background: linear-gradient(to bottom, #E47F47, #CE6633, #963D1C);
      box-shadow: inset 0px 0px 2px 1px #87431F;
      font-size: 14px;
      border-radius: 6px;
      color: #F9DE9B;
      padding: 4px 6px;
      cursor: pointer;
      transition: transform 0.1s, box-shadow 0.1s;
    }
    
    .asset {
    font-size: 16px;
    font-weight: bold;
    color: rgb(255 0 0);
    }
    
    .container {
      display: flex;
      gap: 20px;
      margin: 0 auto;
      background-color: #e3b859;
      padding: 20px;
      box-shadow: inset 0 0 5px 1px #6f391c;
      flex-direction: column;
      background-image: url(https://pic.imgdb.cn/item/66c2fdcdd9c307b7e9ccc165.png);
      background-size: contain;
      background-repeat: no-repeat;
      height: 540px;
      width: 320px;
      top: 50%;
      left: 50%;
      position: absolute;
      transform: translate(-50%, -50%);
      border: 1px solid #6f391c;
      justify-content: space-between;
    }
    .toggle-container {
        padding: 5px;
        text-align: center;
        background-image: url(https://pic.imgdb.cn/item/66bf32d9d9c307b7e9995d58.png);
        background-repeat: repeat;
        background-size: contain;
        color: #E3A73B;
        cursor: pointer;
        box-shadow: inset 0px 1px 2px 0px #E3A73B;
        border: 1px solid black;
        top: -35px;
        left: -1px;
        width: 350px;
        position: absolute;
    }
    .button-container {
      display: flex;
      border-radius: 10px;
      flex-direction: row;
      justify-content: space-evenly;
    }
    .tongling-button-container {
      display: flex;
      border-radius: 10px;
      flex-direction: row;
      justify-content: space-evenly;
      position: fixed;
      top: 69%;
      left: 0%;
      width: 100%;
    }

    .result-container {
      flex-di
      font-size: 20px;
      padding: 10px;
      flex-direction: column;
      align-items: center;
      display: flex;
      font-size: 16px;
      height: 120px;
      justify-content: space-between;
      color: rgba(0, 0, 0, 0.8);
      position: fixed;
      width: 240px;
      top: 43%;
      left: 14%;
    }
    
    .special {
      color: red;
      font-weight: bold;
    }
    
    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.8);
      color: gold;
      font-size: 48px;
      font-weight: bold;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.5s;
    }
    
    .overlay.show {
      opacity: 1;
      pointer-events: auto;
    }
    
    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.4);
    }
    
    .modal-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      text-align: center;
    }
    
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }
    
    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
    .info-container {
      position: fixed;
      top: 25%;
      left: 6%;
      height: 62px;
      width: 135px;
      overflow: hidden;
      text-align: center;
      color: white;
      background: rgb(57, 87, 89);
      box-shadow: rgb(30, 46, 47) 0px 0px 5px 2px inset;
      padding: 2px 4px;
    }
  </style>
</head>
<body>
    <div class="container">
      <div class="toggle-container">紫薇教通灵</div>
      <img src="https://pic.imgdb.cn/item/66bef9e9d9c307b7e95c217e.png" style="position: fixed;height: 65px;width: 65px;border: 1px solid #47301d;top: 25%;left: 55%;">
      <div id="ziwei" style="margin-left: 10px;padding: 0px;width: 72px;height: 63px;display: flex;flex-direction: column;align-items: center;justify-content: space-around;position: fixed;top: 4%;left: 70%;">
        <div class="asset">资产: <span id="asset">3250</span></div>
      </div>
      <div class="info-container">
        <div id="countInfo" style="color: white;display: flex;flex-direction: row;gap: 10px;flex-wrap: wrap;justify-content: center;align-content: center;align-items: center;">
          <p style="margin: 0; font-size:12px;">已通灵<span class="special" id="tonglingCount">0</span>次</p>
          <p style="margin: 0; font-size:12px;">已消耗<span class="special" id="tonglingCost">0</span>的养水</p>
        </div>
      </div>
      <div class="tongling-button-container">
        <button onclick="reset()">重置</button>
        <button id="tonglingBtn">通灵</button>

      </div>
      <div class="result-container">
      <div class="result" id="result"></div>
      </div>
      <div id="bountyInfo" style="height: 100px;color: black;position: fixed;top: 80%;left: 4px;padding: 5px;width: 341px;background-image: url(https://pic.imgdb.cn/item/663885620ea9cb14033e4f6e.png);background-repeat: repeat;box-shadow: inset 0 0px 5px 1px #6f391c;"></div>
    </div>
    
    <div class="overlay" id="overlay">三速欧皇降临!</div>
    
    <div id="modal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <p id="modalText"></p>
        <button id="confirmBtn">确定</button>
        <button id="cancelBtn">取消</button>
      </div>
    </div>

  <script>
    const resultElement = document.getElementById('result');
    const assetElement = document.getElementById('asset');
    const tonglingCountElement = document.getElementById('tonglingCount');
    const tonglingCostElement = document.getElementById('tonglingCost');
    const bountyInfoElement = document.getElementById('bountyInfo');
    const overlayElement = document.getElementById('overlay');

    let asset = 3250;
    let tonglingCount = 0;
    let currentBounty = null;
    let isEuropeKing = false;
    let merchantEvent = false;
    let merchantCost = 0;
    let merchantCount = 0;
    let merchantPrice = 0;
    let merchantSavings = 0;
    let autoWashInterval = null;
    let deductionGold = 0;
    let acceptBounty = false;

    const items = [
      { range: [90, 180], name: '敏捷' },
      { range: [90, 180], name: '信仰' },
      { range: [90, 180], name: '耐力' },
      { range: [18, 36], name: '‰ HP上限' },
      { range: [736, 1132], name: '生命值上限' },
      { range: [18, 36], name: '‰ MP上限' },
      { range: [736, 1132], name: '法力值上限' },
      { range: [18, 36], name: '‰ 法术防' },
      { range: [18, 36], name: '‰ 防御' },
      { range: [18, 36], name: '‰ 物理攻击' },
      { range: [736, 1132], name: '物理攻击' },
      { range: [18, 36], name: '‰ 法术攻击' },
      { range: [736, 1132], name: '法术攻击' },
      { range: [764, 1296], name: '恢复' },
      { range: [236, 488], name: '法术暴击' },
      { range: [236, 488], name: '法术暴击抵抗' },
      { range: [236, 488], name: '忽视目标物防' },
      { range: [236, 488], name: '忽视目标法防' },
      { range: [236, 488], name: '法术闪避' },
      { range: [236, 488], name: '忽视法术闪避' },
      { range: [236, 488], name: '法术命中' },
      { range: [236, 488], name: '物理暴击' },
      { range: [236, 488], name: '物理暴击抵抗' },
      { range: [236, 488], name: '物理闪避' },
      { range: [236, 488], name: '忽视物理闪避' },
      { range: [236, 488], name: '物理命中' },
      { range: [51, 76], name: '每回合怒气' },
      { range: [51, 76], name: '韧性' },
    ];
    
    function getRandomItem() {
      const item = items[Math.floor(Math.random() * items.length)];
      const value = Math.floor(Math.random() * (item.range[1] - item.range[0] + 1)) + item.range[0];
      return `+${value} ${item.name}`;
    }

    function getRandomCount() {
      const rand = Math.random();
      if (rand < 0.1) return 1;
      if (rand < 0.3) return 2;
      if (rand < 0.7) return 3;
      if (rand < 0.95) return 4;
      return 5;
    }

    function checkEuropeKing(resultArray) {
      let sum = 0;
      for (const result of resultArray) {
        if (result.includes('耐力')) {
          sum += parseInt(result.match(/\d+/)[0]) * 0.1;
        } else if (result.includes('信仰')) {
          sum += parseInt(result.match(/\d+/)[0]) * 0.1;
        } else if (result.includes('敏捷')) {
          sum += parseInt(result.match(/\d+/)[0]) * 1;
        }
      }
      return sum >= 361;
    }

    function showOverlay() {
      overlayElement.classList.add('show');
      setTimeout(() => {
        overlayElement.classList.remove('show');
      }, 1000);
    }

    //通灵按钮
    document.getElementById('tonglingBtn').addEventListener('click', () => {
      tonglingAction();
    });

function tonglingAction() {
    if (asset >= (merchantEvent ? merchantPrice : 6.5)) {
    asset -= merchantEvent ? merchantPrice : 6.5;
    assetElement.textContent = asset.toFixed(2);
    tonglingCount++;
    tonglingCountElement.textContent = tonglingCount;
    tonglingCostElement.textContent = `${(tonglingCount * 6.5).toFixed(2)}${merchantEvent ? `（商人已为你节省了${merchantSavings.toFixed(2)}）` : ''}`;

    if (merchantEvent) {
      merchantCount--;
      merchantSavings += 6.5 - merchantPrice;
      if (merchantCount === 0) {
        merchantEvent = false;
      }
    }

    const count = getRandomCount();
    const resultArray = [];
    for (let i = 0; i < count; i++) {
      resultArray.push(getRandomItem());
    }
    resultElement.innerHTML = resultArray.join('<br>');
    
    if (!autoWashInterval) {
      checkBounty(resultArray);
    }

    if (checkEuropeKing(resultArray)) {
      isEuropeKing = true;
      alert('好像洗出了不得了的东西');
    }

    if (!currentBounty && (Math.random() < 0.15 || (isEuropeKing && Math.random() < 0.88))) {
      isEuropeKing = false;
      generateBounty();
    }

    if (tonglingCount % 50 === 0 && Math.random() < 0.15 && !currentBounty) {
      generateMerchantEvent();
    }
  } else {
    alert('资产不足，无法通灵!');
  }
}

function generateTargetAndRewardForAgility() {
    let target, reward;
    const randomChoice = Math.random();

    if (randomChoice < 0.20) {
        target = Math.floor(Math.random() * (299 - 181 + 1)) + 181;
        reward = Math.floor(Math.random() * (600 - 280 + 1)) + 480;
    } else if (randomChoice < 0.70) {
        target = Math.floor(Math.random() * (359 - 300 + 1)) + 300;
        reward = target * 5;
    } else if (randomChoice < 0.90) {
        target = Math.floor(Math.random() * (440 - 360 + 1)) + 360;
        reward = target * (Math.floor(Math.random() * (15 - 10 + 1)) + 10);
    } else if (randomChoice < 0.95) {
        target = Math.floor(Math.random() * (500 - 441 + 1)) + 441;
        reward = target * 15;
    } else {
        target = Math.floor(Math.random() * (530 - 501 + 1)) + 531;
        reward = target * 30 + 1000;
    }

    return { target, reward };
}

function generateTargetAndRewardForAttackOrHp(bountyType) {
    let target, reward;
    const randomChoice = Math.random();
    const range = randomChoice < 0.95 ? [40, 60] : [37, 180];
    
    target = Math.floor(Math.random() * (range[1] - range[0] + 1)) + range[0];
    
    if (target <= 50) {
        reward = target * (bountyType === 'HP' ? 5 : 15) + 1000;
    } else {
        reward = target * (bountyType === 'HP' ? 5 : 30) + 2000;
    }

    return { target, reward };
}

function generateBounty() {
    let target, reward, bountyType;
    const bountyChoice = Math.random();
  

    if (bountyChoice < 0.33) {
        ({ target, reward } = generateTargetAndRewardForAgility());
        bountyType = '敏捷';
    } else if (bountyChoice < 0.66) {
        ({ target, reward } = generateTargetAndRewardForAttackOrHp('Attack'));
        bountyType = Math.random() < 0.5 ? '‰ 物理攻击' : '‰ 法术攻击';
    } else {
        ({ target, reward } = generateTargetAndRewardForAttackOrHp('HP'));
        bountyType = '‰ HP上限';
    }
    console.log(`${bountyType}`);

    currentBounty = { target, reward, bountyType };
    bountyInfoElement.innerHTML = `
        <p style="color: red;font-weight: bold;margin-bottom: 0;">有一个新的悬赏通灵，目标: ${target} ${bountyType}, 赏金${reward}，是否接受?</p>
        <div class="button-container">
            <button id="acceptBtn">接受</button>
            <button id="declineBtn">拒绝</button>
            <button id="descripBtn">说明</button>
        </div>
    `;

    document.getElementById('acceptBtn').addEventListener('click', () => handleAcceptBounty(target, bountyType, reward));
    document.getElementById('declineBtn').addEventListener('click', () => {
        currentBounty = null;
        acceptBounty = false;
        bountyInfoElement.innerHTML = '';
    });
    document.getElementById('descripBtn').addEventListener('click', () => {
        openModal("\n1. 悬赏奖金越高，难度越大 \n2. 不同类型的悬赏有不同的奖励和目标。");
    });
}

function handleAcceptBounty(target, bountyType, reward) {
    acceptBounty = true;
    bountyInfoElement.innerHTML = `
        <p style="color: red;font-weight: bold;margin-bottom: 0;">你需要帮助神秘玩家达到${target}点${bountyType}，如放弃则支付${Math.round(reward * 0.85)}违约金</p>
        <div class="button-container">
            <button id="giveUpBtn">放弃</button>
            <button id="autoBtn">代洗</button>
        </div>
    `;

    handleGiveUp(reward);
    handleAutoWash(target, bountyType);
}

function handleGiveUp(reward) {
  
    document.getElementById('giveUpBtn').addEventListener('click', () => {
        if (autoWashInterval) {
            clearInterval(autoWashInterval);
            autoWashInterval = null;
        }
      
        const penalty = Math.round(reward * 0.85);
        asset -= penalty;
        assetElement.textContent = asset;
        currentBounty = null;
        acceptBounty = false;
        bountyInfoElement.innerHTML = '';
    });
}

function handleAutoWash(target, bountyType) {

    document.getElementById('autoBtn').addEventListener('click', () => {
        if (autoWashInterval) {
            clearInterval(autoWashInterval);
            autoWashInterval = null;
        } else {
            autoWashInterval = setInterval(() => {
                if (asset < (merchantEvent ? merchantPrice : 6.5)) {
                    clearInterval(autoWashInterval);
                    autoWashInterval = null;
                    alert("资产不足，代洗已停止");
                    return;
                }
                document.getElementById('tonglingBtn').click();

                const resultArray = resultElement.innerHTML.split('<br>');
                checkBountyCompletion(resultArray, target, autoWashInterval, bountyType);
            }, 100); // 每0.1秒执行一次
        }
    });
}

function checkBountyCompletion(resultArray, target, autoWashInterval, bountyType) {
    if (!acceptBounty) {
      return;
      console.log('没有接受悬赏，不计算悬赏金额');
    };

    let sum = 0;
    for (const result of resultArray) {
        if (result.includes('耐力') && bountyType === '敏捷') {
            sum += parseInt(result.match(/\d+/)[0]) * 0.1;
        } else if (result.includes('信仰') && bountyType === '敏捷') {
            sum += parseInt(result.match(/\d+/)[0]) * 0.1;
        } else if (result.includes(bountyType)) {
            sum += parseInt(result.match(/\d+/)[0]);
        }
    }

    if (sum >= target) {
        clearInterval(autoWashInterval);
        bountyInfoElement.innerHTML = `
            <p style="color: red;font-weight: bold;margin-bottom: 0;">当前${bountyType}为${sum}，恭喜你完成了悬赏!</p>
            <div class="button-container">
                <button id="claimBtn">领取赏金</button>
            </div>
        `;
        document.getElementById('claimBtn').addEventListener('click', () => {
            asset += currentBounty.reward;
            assetElement.textContent = asset;
            currentBounty = null;
            acceptBounty = false;
            bountyInfoElement.innerHTML = '';
        });
    }
}
    
// 定义处理不同 bountyType 的策略
const bountyHandlers = {
  '敏捷': (result) => {
    if (result.includes('耐力') || result.includes('信仰')) {
      return parseInt(result.match(/\d+/)[0]) * 0.1;
    } else if (result.includes('敏捷')) {
      return parseInt(result.match(/\d+/)[0]) * 1;
    }
    return 0;
  },
  '‰ 物理攻击': (result) => {
    if (result.includes('‰ 物理攻击')) {
      return parseInt(result.match(/\d+/)[0]);
    }
    return 0;
  },
  '‰ 法术攻击': (result) => {
    if (result.includes('‰ 法术攻击')) {
      return parseInt(result.match(/\d+/)[0]);
    }
    return 0;
  },
  '‰ HP上限': (result) => {
    if (result.includes('‰ HP上限')) {
      return parseInt(result.match(/\d+/)[0]);
    }
    return 0;
  }
  // 可以在这里添加更多的 bountyType 处理逻辑
};

function checkBounty(resultArray) {
  if (currentBounty && acceptBounty) {
    const handler = bountyHandlers[currentBounty.bountyType];
    
    if (handler) {
      let sum = 0;
      for (const result of resultArray) {
        sum += handler(result);
      }

      console.log(`当前${currentBounty.bountyType}共计${sum}`);
      if (sum >= currentBounty.target) {
        bountyInfoElement.innerHTML = `
          <p style="color: red;font-weight: bold;margin-bottom: 0;">当前${currentBounty.bountyType}换算为${sum}，恭喜你完成了悬赏!</p>
          <div class="button-container">
          <button id="claimBtn">领取赏金</button>
          </div>
        `;
        document.getElementById('claimBtn').addEventListener('click', () => {
          asset += currentBounty.reward;
          assetElement.textContent = asset;
          currentBounty = null;
          acceptBounty = false;
          bountyInfoElement.innerHTML = '';
        });
      }
    } else {
      console.error(`未处理的 bountyType: ${currentBounty.bountyType}`);
    }
  }
}

    const modal = document.getElementById('modal');
    const modalText = document.getElementById('modalText');
    const confirmBtn = document.getElementById('confirmBtn');
    const cancelBtn = document.getElementById('cancelBtn');
    const closeBtn = document.getElementsByClassName('close')[0];

    closeBtn.addEventListener('click', closeModal);
    confirmBtn.addEventListener('click', confirmModal);
    cancelBtn.addEventListener('click', cancelModal);

    function openModal(text) {
      modalText.textContent = text;
      modal.style.display = 'block';
    }

    function closeModal() {
      modal.style.display = 'none';
    }

    function confirmModal() {
      closeModal();
      if (merchantEvent) {
        if (asset >= merchantCost) {
          asset -= merchantCost;
          assetElement.textContent = asset.toFixed(2);
          tonglingBtn.click();
        } else {
          openModal('收手吧，赌海无涯');
        }
      } else {
        tonglingBtn.click();
      }
    }

    function cancelModal() {
      closeModal();
    }

    function generateMerchantEvent() {
      const cost = Math.floor(Math.random() * 100) + 1;
      const count = cost * 10;
      const price = Math.floor(Math.random() * 4) + 3;

      merchantEvent = true;
      merchantCost = cost;
      merchantCount = count;
      merchantPrice = price;
      merchantSavings = 0;

      bountyInfoElement.innerHTML = `
        <p style="color: lightgreen;font-weight: bold;margin-bottom: 0;">只需要${cost}的手续费，就能优惠买到${price}的通灵${count}个，是否需要？</p>
        <div class="button-container">
        <button id="acceptMerchantBtn">交易</button>
        <button id="declineMerchantBtn">离开</button>
        </div>
      `;

      document.getElementById('acceptMerchantBtn').addEventListener('click', () => {
        if (asset >= cost) {
          asset -= cost;
          assetElement.textContent = asset.toFixed(2);
          bountyInfoElement.innerHTML = '';
        } else {
          openModal('收手吧，赌海无涯');
          merchantEvent = false;
          bountyInfoElement.innerHTML = '';
        }
      });

      document.getElementById('declineMerchantBtn').addEventListener('click', () => {
        merchantEvent = false;
        bountyInfoElement.innerHTML = '';
      });
    }

    function convertPrice(price) {
        let ding = Math.floor(price / 1000000);
        price %= 1000000;
        let liang = Math.floor(price / 1000);
        let wen = price % 1000;
    
        let result = '';
        if (ding > 0) {
            result += `${ding}锭 `;
        }
        if (liang > 0) {
            result += `${liang}两 `;
        }
        if (wen > 0 || result === '') {
            result += `${wen}文`;
        }
        return result.trim();
    }
    
    function deductGold() {
        window.parent.postMessage({ type: 'deductGold' }, 'http://tianfuxilian.top');
    }
    
    window.addEventListener('message', function(event) {
        if (event.origin !== 'http://tianfuxilian.top') return;
    
        if (event.data.type === 'success(650)') {
            asset += 650;
            deductionGold += 2000000;
            document.getElementById('asset').innerText = asset;
            document.getElementById('deductionGold').innerText = `${convertPrice(deductionGold)}`;
        } else if (event.data.type === 'success(65)') {
            asset += 65;
            deductionGold += 200000;
            document.getElementById('asset').innerText = asset;
            document.getElementById('deductionGold').innerText = `${convertPrice(deductionGold)}`;
        }
    });
    
    function exchangeGold() {
        if (asset > 0) {
            const goldToAdd = Math.round(asset / 6.5 * 20) * 1000;
            asset = 0;
            document.getElementById('asset').innerText = asset;
            window.parent.postMessage({ type: 'exchangeGold', amount: goldToAdd }, 'http://tianfuxilian.top');
        }
    }
    
    function reset() {
      asset = 3250;
      assetElement.textContent = asset;
      currentBounty = null;
      acceptBounty = false;
      tonglingCount = 0;
      tonglingCountElement.textContent = tonglingCount;
      tonglingCostElement.textContent = '0';
      resultElement.innerHTML = '';
    }
  </script>
</body>
</html>
